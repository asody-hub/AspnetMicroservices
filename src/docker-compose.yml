version: '3.4'

# networks:
#   src_default:
#     external: true

services:
  catalog.db:
    image: mongo

  basket.db:
    image: redis:alpine

  discount.db:
    image: postgres

  order.db:
    image: postgres

  rabbitmq:
    image: rabbitmq:management-alpine

  pgadmin:
    image: dpage/pgadmin4

  mongo.gui:
    image: mongo-express

  portainer:
    image: portainer/portainer-ce

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile

  discount.api:
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile

  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile

  shopping.aggregator:
    image: ${DOCKER_REGISTRY-}shoppingaggregator
    build:
      context: .
      dockerfile: ApiGateways/ShoppingAggregator/Dockerfile

  ocelot.apigw:
    image: ${DOCKER_REGISTRY-}ocelotapigw
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGw/Dockerfile

  web.app:
    image: ${DOCKER_REGISTRY-}aspnetrunbasics
    build:
      context: .
      dockerfile: WebApps/AspnetRunBasics/Dockerfile

  elasticsearch:
    image: elasticsearch:7.9.2

  kibana:
    image: kibana:7.9.2

volumes:
  mongo_catalog_data:
  mongo_catalog_config:
  redis_basket_data:
  postgres_discount_data:
  postgres_order_data:
  rabbitmq_data:
  pgadmin_data:
  portainer_data:
  elasticsearch_data:
  elasticsearch_config:
  kibana_data:
  kibana_config:
